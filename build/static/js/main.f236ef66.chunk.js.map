{"version":3,"sources":["component/assets/givable-logo.svg","component/assets/dashboard.png","component/assets/hero-ui.png","component/assets/steps.png","component/assets/branded.png","logo.svg","component/Navbar/NavBar.js","component/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","Home","className","Navbar","expand","NavbarBrand","href","src","logo","Container","Row","Col","md","left","target","ui","alt","style","steps","brand","dashboard","App","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,4ECA3CD,EAAOC,QAAU,IAA0B,kC,gPCItBC,Y,4HCmINC,G,6KAvHX,OAEI,yBAAKC,UAAU,YACf,6BACA,kBAACC,EAAA,EAAD,CAAQD,UAAU,sBAAsBE,OAAO,MAC/C,kBAACC,EAAA,EAAD,CAAaC,KAAK,KAAI,yBAAKC,IAAKC,SAIpB,yBAAKN,UAAU,kBACvB,kBAACO,EAAA,EAAD,KAGQ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKT,UAAU,cAAcU,GAAG,KAChC,kBAAC,IAAD,CAAMC,MAAI,GACV,wBAAIX,UAAU,WAAd,8DAEA,6BACA,+CACA,uBAAIY,OAAO,SAASZ,UAAU,qBAC9B,uBAAIY,OAAO,SAASZ,UAAU,qBAI9B,kBAACS,EAAA,EAAD,CAAKC,GAAG,KACR,yBAAKV,UAAU,cAAcK,IAAKQ,IAAKC,IAAI,gBASlD,iCACJ,yBAAKd,UAAU,YACX,yBAAKA,UAAU,iBACf,wBAAIe,MAAO,CAAC,MAAQ,YAApB,oEAGA,4LASD,yBAAKf,UAAU,WACd,kBAACO,EAAA,EAAD,KACD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACR,yBAAKL,IAAKW,IAAOD,MAAO,CAAC,MAAS,OAAW,aAAc,WAG3D,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIV,UAAU,gBACtB,kBAAC,IAAD,KACI,wBAAIe,MAAO,CAAC,MAAQ,YAApB,wBACA,0MAOX,yBAAKf,UAAU,WACX,kBAACO,EAAA,EAAD,KACD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACR,yBAAKL,IAAKY,IAAOF,MAAO,CAAC,MAAS,OAAW,aAAc,WAG3D,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIV,UAAU,gBACtB,kBAAC,IAAD,KACI,wBAAIe,MAAO,CAAC,MAAQ,YAApB,2BACA,uKASX,yBAAKf,UAAU,WACX,kBAACO,EAAA,EAAD,KACD,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACR,yBAAKL,IAAKa,IAAWH,MAAO,CAAC,MAAS,OAAW,aAAc,WAG/D,kBAACN,EAAA,EAAD,CAAKC,GAAG,IAAIV,UAAU,gBAClB,kBAAC,IAAD,KACA,wBAAIe,MAAO,CAAC,MAAQ,YAApB,sBACA,+KAOX,yBAAKf,UAAU,UAEJ,yE,GA7GLF,cCIJqB,MARf,WACE,OACE,yBAAKC,GAAG,QACR,kBAAC,EAAD,Q,MCCgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f236ef66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/givable-logo.b4d38269.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.8a1eb333.png\";","module.exports = __webpack_public_path__ + \"static/media/hero-ui.6bc9760a.png\";","module.exports = __webpack_public_path__ + \"static/media/steps.ecc3fb81.png\";","module.exports = __webpack_public_path__ + \"static/media/branded.cbff6658.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport {NavLink,Collapse,Navbar,NavbarToggler,NavbarBrand,Nav,NavItem} from 'reactstrap';\r\nimport '../Navbar/NavBar.css'\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.closeNavbar = this.closeNavbar.bind(this);\r\n        this.state = {\r\n        collapsed: true\r\n        };\r\n    }\r\n    \r\n    toggleNavbar() {\r\n        this.setState({\r\n        collapsed: !this.state.collapsed\r\n        });\r\n    }\r\n    \r\n    closeNavbar() {\r\n        if (this.state.collapsed !== true) {\r\n        this.toggleNavbar();\r\n        }\r\n    }\r\n  render (){\r\n    return (\r\n        <div className=\"Nav\">\r\n        <Navbar className=\"navbar  navbar-dark \">\r\n       <NavbarBrand tag={NavLink} to=\"/\">givable </NavbarBrand>\r\n       <NavbarToggler onClick={this.toggleNavbar} />\r\n       <Collapse isOpen={!this.state.collapsed} navbar>\r\n         <Nav className=\"mr-auto\" navbar>\r\n         <NavItem>\r\n              <NavLink href=\"/components/\">Components</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\r\n            </NavItem>\r\n          \r\n         </Nav>\r\n       </Collapse>\r\n     </Navbar>\r\n   \r\n     </div>\r\n   \r\n    )\r\n  }\r\n   \r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Fade from 'react-reveal/Fade';\r\nimport '../Navbar/NavBar.css'\r\nimport logo from '../assets/givable-logo.svg'\r\nimport dashboard from '../assets/dashboard.png'\r\nimport ui from '../assets/hero-ui.png'\r\nimport steps from '../assets/steps.png'\r\nimport brand from '../assets/branded.png'\r\nimport {Navbar,NavbarBrand} from 'reactstrap';\r\nimport '../Home/Home.css'\r\n\r\nclass Home extends Component {  \r\n\r\n  render (){\r\n\r\n    return (\r\n      \r\n        <div className=\"fullpage\">\r\n        <div>\r\n        <Navbar className=\"navbar  navbar-dark\" expand=\"md\">\r\n        <NavbarBrand href=\"/\"><img src={logo}/></NavbarBrand>\r\n        \r\n      </Navbar>\r\n    </div> \r\n                    <div className=\"header-content\">\r\n            <Container>\r\n\r\n          \r\n                    <Row>\r\n                        <Col className=\"header-text\" md=\"6\">\r\n                        <Fade left>\r\n                        <h1 className=\"h1-text\">An effortless donation experience for ambitious charities</h1>\r\n                        </Fade>\r\n                        <br></br>\r\n                        <h4>Coming Soon ...</h4>\r\n                        <a  target=\"_blank\" className=\"andriod m-button\"></a>\r\n                        <a  target=\"_blank\" className=\"iphone m-button\"></a>\r\n    \r\n                        </Col>\r\n    \r\n                        <Col md=\"6\">\r\n                        <img className=\"givable-img\" src={ui}  alt=\"Givable\" />\r\n                        </Col>\r\n                      \r\n                    </Row>\r\n                   \r\n                 </Container>\r\n                 </div>\r\n\r\n\r\n                 <section>\r\n             <div className=\"contant1\">\r\n                 <div className=\"contant1-text\">\r\n                 <h3 style={{'color':'#0e1889'}}>\r\n                 Increase online donation revenue & better understand your donors\r\n                 </h3>\r\n                 <p>Givable is a proven mobile-first 4 step donation funnel branded to your charity, including a beautifully simple donation dashboard with detailed reporting</p>\r\n             </div >\r\n             \r\n             </div>\r\n             </section>\r\n              \r\n\r\n\r\n                 \r\n                <div className=\"contant\">\r\n                 <Container>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                    <img src={steps} style={{'width': '100%',    'max-height': 'auto'}}/>\r\n                    </Col>\r\n\r\n                    <Col md=\"6\" className=\"contant-text\">\r\n                    <Fade>\r\n                        <h2 style={{'color':'#0e1889'}}>Proven 4 step funnel</h2>\r\n                        <p>A clear and simple experience consisting of the donation amount, donor details with address look-up, Gift Aid opt-in and payment details with multiple payment methods</p>\r\n                    </Fade>\r\n                    </Col>\r\n                </Row>\r\n             </Container>\r\n             </div>\r\n\r\n             <div className=\"contant\">\r\n                 <Container>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                    <img src={brand} style={{'width': '100%',    'max-height': 'auto'}}/>\r\n                    </Col>\r\n\r\n                    <Col md=\"6\" className=\"contant-text\">\r\n                    <Fade>\r\n                        <h2 style={{'color':'#0e1889'}}>Branded to your charity</h2>\r\n                        <p>The givable user interface can be styled to sit inline with your brand by setting the colour palette, typography and tone of voice.</p>\r\n                    </Fade>\r\n                    </Col>\r\n                </Row>\r\n             </Container>\r\n             </div>\r\n\r\n\r\n\r\n             <div className=\"contant\">\r\n                 <Container>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                    <img src={dashboard} style={{'width': '100%',    'max-height': 'auto'}}/>\r\n                    </Col>\r\n\r\n                    <Col md=\"6\" className=\"contant-text\">\r\n                        <Fade>\r\n                        <h2 style={{'color':'#0e1889'}}>Donation dashboard</h2>\r\n                        <p>Givable comes with a beautifully simple donation dashboard to provide an overview of your donation data with the ability to export reports.</p>\r\n                        </Fade>\r\n                    </Col>\r\n                </Row>\r\n             </Container>\r\n             </div>\r\n\r\n             <div className=\"footer\">\r\n         \r\n                        <p>A test prosjekt by Esmaeel Â© 2020</p>\r\n        </div>\r\n             \r\n\r\n\r\n\r\n      </div>\r\n      \r\n   \r\n    )\r\n  }\r\n   \r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NavBar from './component/Navbar/NavBar.js'\n\nimport Home from './component/Home/Home'\n\n\nfunction App() {\n  return (\n    <div id=\"root\">\n    <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}